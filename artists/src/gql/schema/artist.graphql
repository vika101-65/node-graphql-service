type Artist @key(fields: "id") {
    id: ID!
    firstName: String
    secondName: String
    middleName: String
    birthDate: String
    birthPlace: String
    country: String
    bands: [Band]
    instruments: [String]
}

extend type Band @key(fields: "id") {
  id: ID! @external
 }

type Query {
  artist(id:ID!): Artist
  artists(limit: Int, offset: Int, filter: String): [Artist]
}

input CreateArtistInput {
   firstName: String
    secondName: String
    middleName: String
    birthDate: String
    birthPlace: String
    country: String
    bands: [String]
    instruments: [String]
}

type DeletedCount {
  acknowledged: Boolean
  deletedCount: Int
} 

input UpdateArtistInput {
  id: ID!
  firstName: String
  secondName: String
  middleName: String
  birthDate: String
  birthPlace: String
  country: String
  bands: [String]
  instruments: [String]
}

extend type Mutation {
  createArtist(input: CreateArtistInput): Artist
  deleteArtist(id: ID!): DeletedCount
  updateArtist(input: UpdateArtistInput): Artist
}